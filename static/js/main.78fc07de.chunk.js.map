{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","components/todo/AddTodo.js","components/todo/TodoList.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","prefersDarkScheme","window","matchMedia","currentTheme","localStorage","getItem","document","body","classList","toggle","FormGroup","FormControlLabel","control","Switch","checked","onChange","matches","theme","contains","setItem","label","AddTodo","props","refTodo","useRef","useForm","register","handleSubmit","errors","formState","onSubmit","data","addTodoItem","todoTitle","current","value","focus","TextField","error","type","helperText","variant","fullWidth","inputRef","required","message","maxLength","Button","color","TodoList","todos","deleteTodoItem","markTodoAsCompleted","editTodoItem","editFormStatus","setEditFormStatus","selectedListIndex","setSelectedListIndex","editTodoInput","createEditFrom","e","preventDefault","editFormSubmit","defaultValue","title","ref","List","map","todo","index","ListItem","role","undefined","dense","button","onDoubleClick","style","background","completed","ListItemIcon","Radio","disabled","name","inputProps","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Todo","todosOnStorage","JSON","parse","setTodos","todosCompleted","length","filter","todoValue","stringify","splice","Chip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uRAUeA,EAVA,WACX,OACI,wBAAQC,UAAU,cAAlB,SACI,sBAAKA,UAAU,YAAf,wBACe,mBAAGC,KAAK,kCAAR,iC,mCCgDZC,EAjDA,WACX,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAoBC,OAAOC,WAAW,gCAEtCC,EAAeC,aAAaC,QAAQ,SACtB,QAAhBF,EACAG,SAASC,KAAKC,UAAUC,OAAO,cACR,SAAhBN,GACPG,SAASC,KAAKC,UAAUC,OAAO,eAoBnC,OACI,wBAAQf,UAAU,cAAlB,SACI,sBAAKA,UAAU,YAAf,UACI,iEACA,gGACA,cAACgB,EAAA,EAAD,CAAWhB,UAAU,yBAArB,SAEI,cAACiB,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAAShB,EACtBiB,SA1BF,WAElB,GADAhB,GAAaD,GACTE,EAAkBgB,QAAS,CAC3BV,SAASC,KAAKC,UAAUC,OAAO,eAC/B,IAAIQ,EAAQX,SAASC,KAAKC,UAAUU,SAAS,eACvC,QACA,WACH,CACHZ,SAASC,KAAKC,UAAUC,OAAO,cAC3BQ,EAAQX,SAASC,KAAKC,UAAUU,SAAS,cACvC,OACA,QAEVd,aAAae,QAAQ,QAASF,MAedG,MAAM,sB,mDCKfC,EA3CC,SAACC,GAAW,IAAD,QACjBC,EAAUC,iBAAO,MAEvB,EAA0DC,cAAlDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAQ7C,OACI,sBAAME,SAAUH,GARH,SAAAI,GACbT,EAAMU,YAAYD,EAAKE,WACvBV,EAAQW,QAAQC,MAAQ,GACxBZ,EAAQW,QAAQE,WAKhB,SACI,sBAAK1C,UAAU,MAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC2C,EAAA,EAAD,aACIC,MAAkC,cAA3B,UAAAV,EAAOK,iBAAP,eAAkBM,OAAkD,eAA3B,UAAAX,EAAOK,iBAAP,eAAkBM,MAClEnB,MAAM,uCACNoB,WAC+B,cAA3B,UAAAZ,EAAOK,iBAAP,eAAkBM,MAAuB,4BACd,eAA3B,UAAAX,EAAOK,iBAAP,eAAkBM,OAAwB,gFAE9CE,QAAQ,SACRC,WAAS,EACTC,SAAUpB,GACNG,EAAS,YAAa,CACtBkB,SAAU,CACNT,OAAO,EACPU,QAAS,mDACVC,UAAW,SAK1B,qBAAKpD,UAAU,gBAAf,SACI,cAACqD,EAAA,EAAD,CAAQR,KAAK,SAASE,QAAQ,YAAYO,MAAM,UAAUN,WAAS,EAAnE,yB,+ECwCLO,EA5EE,SAAC3B,GACd,IAAQ4B,EAA6D5B,EAA7D4B,MAAOC,EAAsD7B,EAAtD6B,eAAgBC,EAAsC9B,EAAtC8B,oBAAqBC,EAAiB/B,EAAjB+B,aACpD,EAA4CxD,oBAAS,GAArD,mBAAOyD,EAAP,KAAuBC,EAAvB,KACA,EAAkD1D,mBAAS,GAA3D,mBAAO2D,EAAP,KAA0BC,EAA1B,KACMC,EAAgBlC,iBAAO,MAYvBmC,EAAiB,WACnB,OACI,qBAAKjE,UAAU,kBAAf,SACI,uBAAMoC,SAAU,SAAC8B,GAAD,OAbL,SAACA,GACpBA,EAAEC,iBAEFR,EAAaG,EAAmBE,EAAcxB,QAAQC,OACtDsB,EAAqB,GACrBF,GAAkB,GAQaO,CAAeF,IAAtC,UACI,uBAAOrB,KAAK,OAAOwB,aAAcb,EAAMM,GAAmBQ,MAAOtE,UAAU,eAAeuE,IAAKP,IAC/F,cAACX,EAAA,EAAD,CAAQR,KAAK,SAASE,QAAQ,YAAYO,MAAM,UAAhD,0BAOhB,OACI,eAACkB,EAAA,EAAD,CAAMxE,UAAU,oBAAhB,UAGQwD,GACAA,EAAMiB,KAAI,SAACC,EAAMC,GACb,OACI,eAACC,EAAA,EAAD,CAAUC,UAAMC,EAAWC,OAAK,EAACC,QAAM,EACnCC,cAAe,WACXpB,GAAkB,GAClBE,EAAqBY,IAEzBO,MAAO,CAAEC,WAAYT,EAAKU,WAAa,WAL3C,UAQQxB,GAAkBe,IAAUb,GAC5BG,IAGJ,cAACoB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIhC,MAAM,UACNlC,QAASsD,EAAKU,UACdG,SAAUb,EAAKU,UACf/D,SAAU,kBAAMqC,EAAoBiB,EAAOD,EAAKJ,QAChD7B,OAAO,EACPM,QAAQ,YACRyC,KAAK,oBACLC,WAAY,CAAE,aAAc,SAGpC,cAACC,EAAA,EAAD,CAAcR,MAAO,CAAES,eAAgBjB,EAAKU,WAAa,gBAAzD,SAA4EV,EAAKJ,QACjF,cAACsB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,WAAWC,QAAS,kBAAMvC,EAAekB,IAA3E,SACI,cAAC,IAAD,UA3BiCA,MAmCzD,6DCoCGsB,G,YAtGF,WAGT,IAAMC,EAAiBxF,aAAaC,QAAQ,SAAWwF,KAAKC,MAAM1F,aAAaC,QAAQ,UAAY,GAEnG,EAA0BR,mBAAS,YAAI+F,IAAvC,mBAAO1C,EAAP,KAAc6C,EAAd,KAgCMC,EAAkB9C,GAASA,EAAM+C,OAAS,EAAK/C,EAAMgD,QAAO,SAAC9B,GAAD,OAA6B,IAAnBA,EAAKU,aAAsB,GAEvG,OACI,0BAASpF,UAAU,yBAAnB,UAEI,cAAC,EAAD,CACIsC,YApCQ,SAACmE,GACjBJ,EAAS,GAAD,mBAAK7C,GAAL,CAAY,CAAEc,MAAOmC,EAAWrB,WAAW,MACnD1E,aAAae,QAAQ,QAAS0E,KAAKO,UAAUlD,OAsCzC,sBAAKxD,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAGQwD,GAASA,EAAM+C,OAAS,EACpB,cAAC,EAAD,CACI/C,MAAOA,EACPC,eA1CL,SAACkB,GACpBnB,EAAMmD,OAAOhC,EAAO,GACpB0B,EAAS,YAAI7C,IACb9C,aAAae,QAAQ,QAAS0E,KAAKO,UAAUlD,KAwCrBE,oBA/BA,SAACiB,EAAOL,GAEhCd,EAAMmD,OAAOhC,EAAO,EAAG,CACnBS,WAAW,EACXd,UAIJ+B,EAAS,YAAI7C,IACb9C,aAAae,QAAQ,QAAS0E,KAAKO,UAAUlD,KAuBrBG,aAtCP,SAACgB,EAAOL,GACzBd,EAAMmD,OAAOhC,EAAO,EAAG,CAAEL,MAAOA,EAAOc,WAAW,IAClDiB,EAAS,YAAI7C,IACb9C,aAAae,QAAQ,QAAS0E,KAAKO,UAAUlD,OAqCvB,qBAAKxD,UAAU,mBAAf,wEAMVwD,GAASA,EAAM+C,OAAS,GACxB,qBAAKvG,UAAU,WAAf,SACI,0BAASA,UAAU,aAAnB,UACI,yDACA,uBACA,uCACM,wCADN,IACwB,qCAAQsG,EAAeC,OAAvB,MAAkC/C,EAAM+C,UADhE,QAGA,uBAEA,sBAAKvG,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,4CADJ,IAC4B,cAAC4G,EAAA,EAAD,CAAMtD,MAAM,UAAU5B,MAAO8B,EAAM+C,YAG/D,sBAAKvG,UAAU,QAAf,UACI,6CADJ,IAC6B,cAAC4G,EAAA,EAAD,CAAMtD,MAAM,YAAY5B,MAAO4E,EAAeC,eAI/E,uBAEA,8BACI,2F,YC7EjBM,MAZf,WACE,OACE,sBAAK7G,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,QCDS8G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7G,SAAS8G,eAAe,SAM1BZ,M","file":"static/js/main.78fc07de.chunk.js","sourcesContent":["const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <div className=\"container\">\r\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst Header = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n    const currentTheme = localStorage.getItem(\"theme\");\r\n    if (currentTheme == \"dark\") {\r\n        document.body.classList.toggle(\"dark-theme\");\r\n    } else if (currentTheme == \"light\") {\r\n        document.body.classList.toggle(\"light-theme\");\r\n    }\r\n\r\n    const toggleChecked = () => {\r\n        setDarkMode(!darkMode);\r\n        if (prefersDarkScheme.matches) {\r\n            document.body.classList.toggle(\"light-theme\");\r\n            var theme = document.body.classList.contains(\"light-theme\")\r\n                ? \"light\"\r\n                : \"dark\";\r\n        } else {\r\n            document.body.classList.toggle(\"dark-theme\");\r\n            var theme = document.body.classList.contains(\"dark-theme\")\r\n                ? \"dark\"\r\n                : \"light\";\r\n        }\r\n        localStorage.setItem(\"theme\", theme);\r\n    }\r\n\r\n    \r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"container\">\r\n                <h1>üñäÔ∏èLess - To Do </h1>\r\n                <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\r\n                <FormGroup className=\"d-flex align-items-end\">\r\n\r\n                    <FormControlLabel\r\n                        control={<Switch checked={darkMode}\r\n                            onChange={toggleChecked}\r\n                        />}\r\n                        label=\"Dark Mode\"\r\n                    />\r\n                </FormGroup>\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddTodo = (props) => {\r\n    const refTodo = useRef(null);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        props.addTodoItem(data.todoTitle);\r\n        refTodo.current.value = \"\";\r\n        refTodo.current.focus();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-8 mb-2\">\r\n                    <TextField\r\n                        error={errors.todoTitle?.type === 'required' || errors.todoTitle?.type === 'maxLength'}\r\n                        label=\"Whats needs to be done? ü§î\"\r\n                        helperText={\r\n                            errors.todoTitle?.type === 'required' && \"Its required üòü\" ||\r\n                            errors.todoTitle?.type === 'maxLength' && \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\"\r\n                        }\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        inputRef={refTodo}\r\n                        {...register(\"todoTitle\", {\r\n                            required: {\r\n                                value: true,\r\n                                message: \"Please write what is in your mind? ü§î\"\r\n                            }, maxLength: 50\r\n                        })}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-sm-2 mb-2\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth\r\n                    >Add</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import { Button, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Radio } from \"@material-ui/core\";\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport { useRef, useState } from \"react\";\r\nconst TodoList = (props) => {\r\n    const { todos, deleteTodoItem, markTodoAsCompleted, editTodoItem } = props;\r\n    const [editFormStatus, setEditFormStatus] = useState(false);\r\n    const [selectedListIndex, setSelectedListIndex] = useState(0);\r\n    const editTodoInput = useRef(null);\r\n\r\n    const editFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        editTodoItem(selectedListIndex, editTodoInput.current.value);\r\n        setSelectedListIndex(0);\r\n        setEditFormStatus(false);\r\n    }\r\n\r\n\r\n    // create dynamic form for edit todo item\r\n    const createEditFrom = () => {\r\n        return (\r\n            <div className=\"editFormWrapper\">\r\n                <form onSubmit={(e) => editFormSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={todos[selectedListIndex].title} className=\"custom-input\" ref={editTodoInput} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                    >Update</Button>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <List className=\"todo-list-wrapper\">\r\n\r\n            {\r\n                todos &&\r\n                todos.map((todo, index) => {\r\n                    return (\r\n                        <ListItem role={undefined} dense button key={index}\r\n                            onDoubleClick={() => {\r\n                                setEditFormStatus(true);\r\n                                setSelectedListIndex(index)\r\n                            }}\r\n                            style={{ background: todo.completed && \"#c9eecb\" }}>\r\n\r\n                            {\r\n                                editFormStatus && index === selectedListIndex &&\r\n                                createEditFrom()\r\n                            }\r\n\r\n                            <ListItemIcon>\r\n                                <Radio\r\n                                    color=\"primary\"\r\n                                    checked={todo.completed}\r\n                                    disabled={todo.completed}\r\n                                    onChange={() => markTodoAsCompleted(index, todo.title)}\r\n                                    value={true}\r\n                                    variant=\"secondary\"\r\n                                    name=\"radio-button-demo\"\r\n                                    inputProps={{ 'aria-label': 'A' }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText style={{ textDecoration: todo.completed && \"line-through\" }}>{todo.title}</ListItemText>\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={() => deleteTodoItem(index)}>\r\n                                    <DeleteSharpIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <small>Double click to edit</small>\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { Chip } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport AddTodo from './AddTodo';\r\nimport TodoList from './TodoList';\r\nimport \"./Todo.css\";\r\nimport \"../../theme.css\";\r\n\r\nconst Todo = () => {\r\n\r\n    // get data from browser if already exists and set to initial state\r\n    const todosOnStorage = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\r\n\r\n    const [todos, setTodos] = useState([...todosOnStorage]);\r\n\r\n    const addTodoItem = (todoValue) => {\r\n        setTodos([...todos, { title: todoValue, completed: false }]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const deleteTodoItem = (index) => {\r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const editTodoItem = (index, title) => {\r\n        todos.splice(index, 1, { title: title, completed: false });\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const markTodoAsCompleted = (index, title) => {\r\n        // basic modification\r\n        todos.splice(index, 1, {\r\n            completed: true,\r\n            title\r\n        });\r\n\r\n        // and setting to the main states with spread\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    // get completed todos\r\n    const todosCompleted = (todos && todos.length > 0) ? todos.filter((todo) => todo.completed === true) : []\r\n\r\n    return (\r\n        <section className=\"container todo-wrapper\">\r\n\r\n            <AddTodo\r\n                addTodoItem={addTodoItem}\r\n\r\n            />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n\r\n                    {\r\n                        todos && todos.length > 0 ?\r\n                            <TodoList\r\n                                todos={todos}\r\n                                deleteTodoItem={deleteTodoItem}\r\n                                markTodoAsCompleted={markTodoAsCompleted}\r\n                                editTodoItem={editTodoItem}\r\n                            />\r\n                            : <div className=\"alert alert-info\">What are you thinking, Add your first todo? üòâ</div>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {\r\n                    todos && todos.length > 0 &&\r\n                    <div className=\"col-md-4\">\r\n                        <section className=\"todo-board\">\r\n                            <h3>Todo Board üìù</h3>\r\n                            <hr />\r\n                            <small>\r\n                                ( <span>List</span> <span> {todosCompleted.length} / {todos.length}</span> )\r\n                            </small>\r\n                            <hr />\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>All : </strong> <Chip color=\"primary\" label={todos.length} />\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>Done : </strong> <Chip color=\"secondary\" label={todosCompleted.length} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div>\r\n                                <p>We don't store data on server. üôÇ</p>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Todo;","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Todo from 'components/todo/Todo';\nimport './App.css';\nimport './reset.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Todo></Todo>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}