{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","components/todo/AddTodo.js","components/todo/TodoList.js","hooks/useProgress.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","AddTodo","props","refTodo","useRef","useForm","register","handleSubmit","errors","formState","onSubmit","data","addTodoItem","todoTitle","current","value","focus","TextField","error","type","helperText","variant","fullWidth","inputRef","required","message","maxLength","Button","color","TodoList","todos","deleteTodoItem","markTodoAsCompleted","editTodoItem","editFormStatus","setEditFormStatus","selectedListIndex","setSelectedListIndex","editTodoInput","createEditFrom","e","preventDefault","editFormSubmit","defaultValue","title","ref","List","map","todo","index","ListItem","role","undefined","dense","button","onDoubleClick","completed","ListItemIcon","Radio","disabled","name","inputProps","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","useProgress","target","progress","setProgress","c","Math","ceil","console","log","LinearProgressWithLabel","Box","display","alignItems","width","mr","LinearProgress","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Typography","component","round","Todo","todosOnStorage","JSON","parse","setTodos","todosCompleted","length","filter","stringify","todoValue","splice","marginRight","Chip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.986fd6ec.chunk.js","sourcesContent":["const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <div className=\"container text-center\">\r\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Header = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"theme\");\r\n\r\n        if (currentTheme === \"dark\") {\r\n            document.body.classList.add(\"dark-theme\");\r\n            setDarkMode(true);\r\n        } else {\r\n            setDarkMode(false);\r\n            document.body.classList.remove(\"dark-theme\");\r\n        }\r\n    }, [darkMode]);\r\n\r\n\r\n\r\n    const toggleChecked = () => {\r\n        setDarkMode(!darkMode);\r\n        document.body.classList.toggle(\"dark-theme\");\r\n        const theme = document.body.classList.contains(\"dark-theme\")\r\n            ? \"dark\"\r\n            : \"light\";\r\n        localStorage.setItem(\"theme\", theme);\r\n    }\r\n\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-10\">\r\n                        <h1>üñäÔ∏èLess - To Do </h1>\r\n                        <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <FormGroup className=\"d-flex align-items-end\">\r\n                            <FormControlLabel\r\n                                control={<Switch checked={darkMode}\r\n                                    onChange={toggleChecked}\r\n                                />}\r\n                                label=\"Dark Mode\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddTodo = (props) => {\r\n    const refTodo = useRef(null);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        props.addTodoItem(data.todoTitle);\r\n        refTodo.current.value = \"\";\r\n        refTodo.current.focus();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-8 mb-2\">\r\n                    <TextField\r\n                        error={errors.todoTitle?.type === 'required' || errors.todoTitle?.type === 'maxLength'}\r\n                        label=\"Whats needs to be done? ü§î\"\r\n                        helperText={\r\n                            errors.todoTitle?.type === 'required' && \"Its required üòü\" ||\r\n                            errors.todoTitle?.type === 'maxLength' && \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\"\r\n                        }\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        inputRef={refTodo}\r\n                        {...register(\"todoTitle\", {\r\n                            required: {\r\n                                value: true,\r\n                                message: \"Please write what is in your mind? ü§î\"\r\n                            }, maxLength: 50\r\n                        })}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-sm-4 mb-2\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth\r\n                    >Add</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import { Button, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Radio } from \"@material-ui/core\";\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport { useRef, useState } from \"react\";\r\nconst TodoList = (props) => {\r\n    const { todos, deleteTodoItem, markTodoAsCompleted, editTodoItem } = props;\r\n    const [editFormStatus, setEditFormStatus] = useState(false);\r\n    const [selectedListIndex, setSelectedListIndex] = useState(0);\r\n    const editTodoInput = useRef(null);\r\n\r\n    const editFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        editTodoItem(selectedListIndex, editTodoInput.current.value);\r\n        setSelectedListIndex(0);\r\n        setEditFormStatus(false);\r\n    }\r\n\r\n\r\n    // create dynamic form for edit todo item\r\n    const createEditFrom = () => {\r\n        return (\r\n            <div className=\"editFormWrapper\">\r\n                <form onSubmit={(e) => editFormSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={todos[selectedListIndex].title} className=\"custom-input\" ref={editTodoInput} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                    >Update</Button>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List className=\"todo-list-wrapper\">\r\n\r\n                {\r\n                    todos &&\r\n                    todos.map((todo, index) => {\r\n                        return (\r\n                            <ListItem role={undefined} dense button key={index}\r\n                                onDoubleClick={() => {\r\n                                    setEditFormStatus(true);\r\n                                    setSelectedListIndex(index)\r\n                                }}\r\n\r\n                                className={todo.completed && \"todo-completed\"}\r\n                            >\r\n\r\n                                {\r\n                                    editFormStatus && index === selectedListIndex &&\r\n                                    createEditFrom()\r\n                                }\r\n\r\n                                <ListItemIcon>\r\n                                    <Radio\r\n                                        color=\"primary\"\r\n                                        checked={todo.completed}\r\n                                        disabled={todo.completed}\r\n                                        onChange={() => markTodoAsCompleted(index, todo.title)}\r\n                                        value={true}\r\n                                        variant=\"secondary\"\r\n                                        name=\"radio-button-demo\"\r\n                                        inputProps={{ 'aria-label': 'A' }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <ListItemText style={{ textDecoration: todo.completed && \"line-through\" }}>{todo.title}</ListItemText>\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"comments\" onClick={() => deleteTodoItem(index)}>\r\n                                        <DeleteSharpIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n\r\n            <small>Double click to edit</small>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useProgress = (completed, target) => {\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const c = Math.ceil(completed / target * 100);\r\n        setProgress(c)\r\n        console.log(progress);\r\n    }, [completed, target]);\r\n\r\n    return progress;\r\n}\r\n\r\nexport default useProgress;","import { Box, Chip, CircularProgress, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport AddTodo from './AddTodo';\r\nimport TodoList from './TodoList';\r\nimport \"./Todo.css\";\r\nimport \"../../theme.css\";\r\nimport useProgress from 'hooks/useProgress';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress variant=\"determinate\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    // get data from browser if already exists and set to initial state\r\n    const todosOnStorage = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\r\n\r\n    const [todos, setTodos] = useState([...todosOnStorage]);\r\n\r\n    // get completed todos\r\n    const todosCompleted = (todos && todos.length > 0) ? todos.filter((todo) => todo.completed === true) : []\r\n\r\n    const progress = useProgress(todosCompleted.length, todos.length)\r\n\r\n    const addTodoItem = (todoValue) => {\r\n        setTodos([...todos, { title: todoValue, completed: false }]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const deleteTodoItem = (index) => {\r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const editTodoItem = (index, title) => {\r\n        todos.splice(index, 1, { title: title, completed: false });\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    const markTodoAsCompleted = (index, title) => {\r\n        // basic modification\r\n        todos.splice(index, 1, {\r\n            completed: true,\r\n            title\r\n        });\r\n\r\n        // and setting to the main states with spread\r\n        setTodos([...todos]);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    return (\r\n        <section className=\"container todo-wrapper\">\r\n            <div className=\"custom-progressbar\">\r\n                <LinearProgressWithLabel value={progress} color=\"secondary\" />\r\n            </div>\r\n\r\n            <AddTodo\r\n                addTodoItem={addTodoItem}\r\n\r\n            />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n\r\n                    {\r\n                        todos && todos.length > 0 ?\r\n                            <TodoList\r\n                                todos={todos}\r\n                                deleteTodoItem={deleteTodoItem}\r\n                                markTodoAsCompleted={markTodoAsCompleted}\r\n                                editTodoItem={editTodoItem}\r\n                            />\r\n\r\n                            : <div className=\"alert alert-info\">What are you thinking, Add your first todo? üòâ</div>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {\r\n                    todos && todos.length > 0 &&\r\n                    <div className=\"col-lg-4\">\r\n                        <section className=\"todo-board\">\r\n                            <h3 className=\"d-flex\"> üìù <div style={{marginRight: \"5px\"}}>Todo Board</div>  <CircularProgressWithLabel color=\"secondary\" value={progress} /></h3>\r\n\r\n                            <hr />\r\n                            <small>\r\n                                ( <span>List</span> <span> {todosCompleted.length} / {todos.length}</span> )\r\n                            </small>\r\n                            <hr />\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>All : </strong> <Chip color=\"primary\" label={todos.length} />\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>Done : </strong> <Chip color=\"secondary\" label={todosCompleted.length} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div>\r\n                                <p>We don't store data on server. üôÇ</p>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Todo;","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Todo from 'components/todo/Todo';\nimport './App.css';\nimport './reset.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Todo></Todo>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}