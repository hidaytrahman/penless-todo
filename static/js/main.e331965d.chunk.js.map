{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","hooks/useProgress.js","store/noteStore.js","store/todoStore.js","store/index.js","components/todo/AddTodo.js","components/todo/TodoList.js","components/shared/material.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","useProgress","completed","target","progress","setProgress","c","Math","ceil","noteStore","rootStore","this","makeAutoObservable","todoStore","todos","JSON","parse","autoBind","todoData","push","stringify","index","filter","item","i","newvalue","splice","title","StoresContext","createContext","useStores","useContext","AddTodo","addTodoItem","refTodo","useRef","useForm","register","handleSubmit","errors","formState","onSubmit","data","todoTitle","current","value","focus","TextField","error","type","helperText","variant","fullWidth","inputRef","required","message","maxLength","Button","color","observer","editTodo","markCompleted","deleteTodo","editFormStatus","setEditFormStatus","selectedListIndex","setSelectedListIndex","editTodoInput","createEditFrom","e","preventDefault","handlerEditFormSubmit","defaultValue","ref","List","map","todo","ListItem","role","undefined","dense","button","onDoubleClick","ListItemIcon","Radio","disabled","name","inputProps","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","CircularProgressWithLabel","props","Box","position","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Typography","component","round","LinearProgressWithLabel","width","mr","LinearProgress","todosCompleted","length","todoValue","addTodo","marginRight","Chip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e331965d.chunk.js","sourcesContent":["const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <div className=\"container text-center\">\r\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Header = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"theme\");\r\n\r\n        if (currentTheme === \"dark\") {\r\n            document.body.classList.add(\"dark-theme\");\r\n            setDarkMode(true);\r\n        } else {\r\n            setDarkMode(false);\r\n            document.body.classList.remove(\"dark-theme\");\r\n        }\r\n    }, [darkMode]);\r\n\r\n\r\n\r\n    const toggleChecked = () => {\r\n        setDarkMode(!darkMode);\r\n        document.body.classList.toggle(\"dark-theme\");\r\n        const theme = document.body.classList.contains(\"dark-theme\")\r\n            ? \"dark\"\r\n            : \"light\";\r\n        localStorage.setItem(\"theme\", theme);\r\n    }\r\n\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-10\">\r\n                        <h1>üñäÔ∏èLess - To Do </h1>\r\n                        <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                        <FormGroup className=\"d-flex align-items-end\">\r\n                            <FormControlLabel\r\n                                control={<Switch checked={darkMode}\r\n                                    onChange={toggleChecked}\r\n                                />}\r\n                                label=\"Dark Mode\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\r\n\r\nconst useProgress = (completed, target) => {\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const c = Math.ceil(completed / target * 100);\r\n        setProgress(c)\r\n        // console.log(progress);\r\n    }, [completed, target]);\r\n\r\n    return progress;\r\n}\r\n\r\nexport default useProgress;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass noteStore {\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default noteStore;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass todoStore {\r\n    todos = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this, {}, { autoBind: true })\r\n    }\r\n\r\n    addTodo(todoData) {\r\n        this.todos.push(todoData)\r\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\r\n    }\r\n\r\n    deleteTodo(index) {\r\n        this.todos = this.todos.filter((item, i) => i !== index);\r\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\r\n    }\r\n\r\n    editTodo(index, newvalue) {\r\n        this.todos.splice(index, 1, newvalue);\r\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\r\n    }\r\n\r\n    markCompleted(index) {\r\n        this.todos.splice(index, 1, {\r\n            completed: true,\r\n            title: this.todos[index].title\r\n        });\r\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\r\n    }\r\n}\r\n\r\nexport default todoStore;","import { createContext, useContext } from \"react\";\r\nimport noteStore from \"./noteStore\";\r\nimport todoStore from \"./todoStore\";\r\n\r\nclass RootStore {\r\n    constructor() {\r\n        this.noteStore = new noteStore(this);\r\n        this.todoStore = new todoStore(this);\r\n    }\r\n}\r\n\r\nconst StoresContext = createContext(new RootStore());\r\n\r\nexport const useStores = () => useContext(StoresContext);","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddTodo = ({addTodoItem}) => {\r\n    const refTodo = useRef(null);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        addTodoItem(data.todoTitle);\r\n        refTodo.current.value = \"\";\r\n        refTodo.current.focus();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-8 mb-2\">\r\n                    <TextField\r\n                        error={errors.todoTitle?.type === 'required' || errors.todoTitle?.type === 'maxLength'}\r\n                        label=\"Whats needs to be done? ü§î\"\r\n                        helperText={\r\n                            errors.todoTitle?.type === 'required' && \"Its required üòü\" ||\r\n                            errors.todoTitle?.type === 'maxLength' && \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\"\r\n                        }\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        inputRef={refTodo}\r\n                        {...register(\"todoTitle\", {\r\n                            required: {\r\n                                value: true,\r\n                                message: \"Please write what is in your mind? ü§î\"\r\n                            }, maxLength: 50\r\n                        })}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-sm-4 mb-2\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth\r\n                    >Add</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import { Button, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Radio } from \"@material-ui/core\";\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport { useRef, useState } from \"react\";\r\nimport { useStores } from \"store\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst TodoList = () => {\r\n    // get from store\r\n    const {todoStore} = useStores();\r\n    const {todos, editTodo, markCompleted, deleteTodo} = todoStore;\r\n\r\n    const [editFormStatus, setEditFormStatus] = useState(false);\r\n    const [selectedListIndex, setSelectedListIndex] = useState(0);\r\n    const editTodoInput = useRef(null);\r\n\r\n    const handlerEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        editTodo(selectedListIndex, { title: editTodoInput.current.value, completed: false });\r\n        setSelectedListIndex(0);\r\n        setEditFormStatus(false);\r\n    }\r\n\r\n\r\n    // create dynamic form for edit todo item\r\n    const createEditFrom = () => {\r\n        return (\r\n            <div className=\"editFormWrapper\">\r\n                <form onSubmit={(e) => handlerEditFormSubmit(e)}>\r\n                    <input type=\"text\" defaultValue={todos[selectedListIndex].title} className=\"custom-input\" ref={editTodoInput} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                    >Update</Button>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List className=\"todo-list-wrapper\">\r\n\r\n                {\r\n                    todos &&\r\n                    todos.map((todo, index) => {\r\n                        return (\r\n                            <ListItem role={undefined} dense button key={index}\r\n                                onDoubleClick={() => {\r\n                                    setEditFormStatus(true);\r\n                                    setSelectedListIndex(index)\r\n                                }}\r\n\r\n                                className={todo.completed && \"todo-completed\"}\r\n                            >\r\n\r\n                                {\r\n                                    editFormStatus && index === selectedListIndex &&\r\n                                    createEditFrom()\r\n                                }\r\n\r\n                                <ListItemIcon>\r\n                                    <Radio\r\n                                        color=\"primary\"\r\n                                        checked={todo.completed}\r\n                                        disabled={todo.completed}\r\n                                        onChange={() => markCompleted(index)}\r\n                                        value={true}\r\n                                        variant=\"secondary\"\r\n                                        name=\"radio-button-demo\"\r\n                                        inputProps={{ 'aria-label': 'A' }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <ListItemText style={{ textDecoration: todo.completed && \"line-through\" }}>{todo.title}</ListItemText>\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"comments\" onClick={() => deleteTodo(index)}>\r\n                                        <DeleteSharpIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n\r\n            <small>Double click to edit</small>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default observer(TodoList);","import { Box, CircularProgress, LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nexport function CircularProgressWithLabel(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress variant=\"determinate\" {...props} />\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport function LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import { Chip } from '@material-ui/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport useProgress from 'hooks/useProgress';\r\nimport { useStores } from 'store';\r\n\r\nimport AddTodo from './AddTodo';\r\nimport TodoList from './TodoList';\r\nimport \"./Todo.css\";\r\nimport \"../../theme.css\";\r\n\r\nimport { CircularProgressWithLabel, LinearProgressWithLabel } from 'components/shared/material';\r\n\r\nconst Todo = () => {\r\n    const { todoStore, todoStore: { todos } } = useStores();\r\n\r\n    // get completed todos\r\n    const todosCompleted = (todos && todos.length > 0) ? todos.filter((todo) => todo.completed === true) : []\r\n\r\n    const progress = useProgress(todosCompleted.length, todos.length)\r\n\r\n    const addTodoItem = (todoValue) => {\r\n        todoStore.addTodo({ title: todoValue, completed: false });\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"container todo-wrapper\">\r\n            <div className=\"custom-progressbar\">\r\n                <LinearProgressWithLabel value={progress} color=\"secondary\" />\r\n            </div>\r\n\r\n            <AddTodo\r\n                addTodoItem={addTodoItem}\r\n\r\n            />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n\r\n                    {\r\n                        todos && todos.length > 0 ?\r\n                            <TodoList />\r\n                            : <div className=\"alert alert-info\">What are you thinking, Add your first todo? üòâ</div>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {\r\n                    todos && todos.length > 0 &&\r\n                    <div className=\"col-lg-4\">\r\n                        <section className=\"todo-board\">\r\n                            <h3 className=\"d-flex\"> üìù <div style={{ marginRight: \"5px\" }}>Todo Board</div>  <CircularProgressWithLabel color=\"secondary\" value={progress} /></h3>\r\n\r\n                            <hr />\r\n                            <small>\r\n                                ( <span>List</span> <span> {todosCompleted.length} / {todos.length}</span> )\r\n                            </small>\r\n                            <hr />\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>All : </strong> <Chip color=\"primary\" label={todos.length} />\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <strong>Done : </strong> <Chip color=\"secondary\" label={todosCompleted.length} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div>\r\n                                <p>We don't store data on server. üôÇ</p>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default observer(Todo);","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Todo from 'components/todo/Todo';\nimport './App.css';\nimport './reset.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Todo></Todo>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}