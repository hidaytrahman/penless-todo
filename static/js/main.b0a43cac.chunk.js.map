{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","hooks/useProgress.js","store/noteStore.js","store/todoStore.js","store/index.js","components/todo/AddTodo.js","components/todo/TodoList.js","components/shared/material.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","useProgress","completed","target","progress","setProgress","c","Math","ceil","noteStore","rootStore","this","makeAutoObservable","todoStore","todos","JSON","parse","autoBind","todoData","push","stringify","index","filter","item","i","newvalue","splice","title","StoresContext","createContext","useStores","useContext","AddTodo","addTodoItem","refTodo","useRef","useForm","register","handleSubmit","errors","formState","onSubmit","data","todoTitle","current","value","focus","TextField","error","type","helperText","variant","fullWidth","inputRef","data-testid","required","message","maxLength","Button","color","observer","editTodo","markCompleted","deleteTodo","editFormStatus","setEditFormStatus","selectedListIndex","setSelectedListIndex","editTodoInput","createEditFrom","e","preventDefault","handlerEditFormSubmit","defaultValue","ref","List","map","todo","ListItem","role","dense","button","onDoubleClick","ListItemIcon","Radio","disabled","name","inputProps","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","CircularProgressWithLabel","props","Box","position","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Typography","component","round","LinearProgressWithLabel","width","mr","LinearProgress","todosCompleted","length","todoValue","addTodo","marginRight","Chip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+KAUeA,EAVA,WACX,OACI,wBAAQC,UAAU,cAAlB,SACI,sBAAKA,UAAU,wBAAf,wBACe,mBAAGC,KAAK,kCAAR,iC,mCCuDZC,EAxDA,WACX,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WAGe,SAFAC,aAAaC,QAAQ,UAGtCC,SAASC,KAAKC,UAAUC,IAAI,cAC5BP,GAAY,KAEZA,GAAY,GACZI,SAASC,KAAKC,UAAUE,OAAO,iBAEpC,CAACT,IAcJ,OACI,wBAAQJ,UAAU,cAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,iEACA,mGAEJ,qBAAKA,UAAU,WAAf,SACI,cAACc,EAAA,EAAD,CAAWd,UAAU,yBAArB,SACI,cAACe,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASd,EACtBe,SAtBV,WAClBd,GAAaD,GACbK,SAASC,KAAKC,UAAUS,OAAO,cAC/B,IAAMC,EAAQZ,SAASC,KAAKC,UAAUW,SAAS,cACzC,OACA,QACNf,aAAagB,QAAQ,QAASF,MAkBNG,MAAM,0B,iBC/BvBC,EAZK,SAACC,EAAWC,GAC5B,MAAgCxB,mBAAS,GAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KAQA,OANAvB,qBAAU,WACN,IAAMwB,EAAIC,KAAKC,KAAKN,EAAYC,EAAS,KACzCE,EAAYC,KAEb,CAACJ,EAAWC,IAERC,G,gBCEIK,EATX,WAAYC,GAAY,oBACpBC,KAAKD,UAAYA,EAEjBE,YAAmBD,O,QC2BZE,E,WA7BX,WAAYH,GAAY,yBAFxBI,MAAQ/B,aAAaC,QAAQ,SAAW+B,KAAKC,MAAMjC,aAAaC,QAAQ,UAAY,GAGhF2B,KAAKD,UAAYA,EACjBE,YAAmBD,KAAM,GAAI,CAAEM,UAAU,I,2CAG7C,SAAQC,GACJP,KAAKG,MAAMK,KAAKD,GAChBnC,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,wBAGtD,SAAWO,GACPV,KAAKG,MAAQH,KAAKG,MAAMQ,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMH,KAClDtC,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,sBAGtD,SAASO,EAAOI,GACZd,KAAKG,MAAMY,OAAOL,EAAO,EAAGI,GAC5B1C,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,2BAGtD,SAAcO,GACVV,KAAKG,MAAMY,OAAOL,EAAO,EAAG,CACxBnB,WAAW,EACXyB,MAAOhB,KAAKG,MAAMO,GAAOM,QAE7B5C,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,Y,KCnBpDc,EAAgBC,wBAAc,IANhC,aAAe,oBACXlB,KAAKF,UAAY,IAAIA,EAAUE,MAC/BA,KAAKE,UAAY,IAAIA,EAAUF,QAM1BmB,EAAY,kBAAMC,qBAAWH,I,kCCkD3BI,EA3DC,SAAC,GAAqB,IAAD,QAAlBC,EAAkB,EAAlBA,YACXC,EAAUC,iBAAO,MAEvB,EAIIC,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAQf,OACE,sBAAME,SAAUH,GAPD,SAACI,GAChBT,EAAYS,EAAKC,WACjBT,EAAQU,QAAQC,MAAQ,GACxBX,EAAQU,QAAQE,WAIhB,SACE,sBAAKtE,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACuE,EAAA,EAAD,aACEC,MAC6B,cAA3B,UAAAT,EAAOI,iBAAP,eAAkBM,OACS,eAA3B,UAAAV,EAAOI,iBAAP,eAAkBM,MAEpBjD,MAAM,uCACNkD,WAC8B,cAA3B,UAAAX,EAAOI,iBAAP,eAAkBM,MAAuB,4BACd,eAA3B,UAAAV,EAAOI,iBAAP,eAAkBM,OACjB,gFAEJE,QAAQ,SACRC,WAAS,EACTC,SAAUnB,EACVoB,cAAY,aACRjB,EAAS,YAAa,CACxBkB,SAAU,CACRV,OAAO,EACPW,QAAS,mDAEXC,UAAW,SAKjB,qBAAKjF,UAAU,gBAAf,SACE,cAACkF,EAAA,EAAD,CACET,KAAK,SACLE,QAAQ,YACRQ,MAAM,UACNP,WAAS,EACTE,cAAY,cALd,yB,gFC+DKM,eAhGE,WAEf,IAAQ/C,EAAciB,IAAdjB,UACAC,EAA+CD,EAA/CC,MAAO+C,EAAwChD,EAAxCgD,SAAUC,EAA8BjD,EAA9BiD,cAAeC,EAAelD,EAAfkD,WAExC,EAA4CpF,oBAAS,GAArD,mBAAOqF,EAAP,KAAuBC,EAAvB,KACA,EAAkDtF,mBAAS,GAA3D,mBAAOuF,EAAP,KAA0BC,EAA1B,KACMC,EAAgBjC,iBAAO,MAavBkC,EAAiB,WACrB,OACE,qBAAK7F,UAAU,kBAAf,SACE,uBAAMiE,SAAU,SAAC6B,GAAD,OAdQ,SAACA,GAC7BA,EAAEC,iBACFV,EAASK,EAAmB,CAC1BvC,MAAOyC,EAAcxB,QAAQC,MAC7B3C,WAAW,IAEbiE,EAAqB,GACrBF,GAAkB,GAOSO,CAAsBF,IAA7C,UACE,uBACErB,KAAK,OACLwB,aAAc3D,EAAMoD,GAAmBvC,MACvCnD,UAAU,eACVkG,IAAKN,IAEP,cAACV,EAAA,EAAD,CAAQT,KAAK,SAASE,QAAQ,YAAYQ,MAAM,UAAhD,0BAQR,OACE,gCACE,cAACgB,EAAA,EAAD,CAAMnG,UAAU,oBAAhB,SACGsC,GACCA,EAAM8D,KAAI,SAACC,EAAMxD,GACf,OACE,eAACyD,EAAA,EAAD,CACEC,KAAK,WACLC,OAAK,EACLC,QAAM,EAENC,cAAe,WACbjB,GAAkB,GAClBE,EAAqB9C,IAEvB7C,UAAWqG,EAAK3E,WAAa,iBAC7BoD,cAAY,gBAVd,UAYGU,GACC3C,IAAU6C,GACVG,IAEF,cAACc,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEzB,MAAM,UACNjE,QAASmF,EAAK3E,UACdmF,SAAUR,EAAK3E,UACfP,SAAU,kBAAMmE,EAAczC,IAC9BwB,OAAO,EACPM,QAAQ,YACRmC,KAAK,oBACLC,WAAY,CAAE,aAAc,SAGhC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,eAAgBb,EAAK3E,WAAa,gBAD7C,SAGG2E,EAAKlD,QAER,cAACgE,EAAA,EAAD,CAAyBrC,cAAY,iBAArC,SACE,cAACsC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,WACXC,QAAS,kBAAMhC,EAAW1C,IAH5B,SAKE,cAAC,IAAD,UAnCCA,QA2Cf,+D,iDCxGC,SAAS2E,EAA0BC,GACtC,OACI,eAACC,EAAA,EAAD,CAAKC,SAAS,WAAWC,QAAQ,cAAjC,UACI,cAACC,EAAA,EAAD,aAAkBlD,QAAQ,eAAkB8C,IAC5C,cAACC,EAAA,EAAD,CACII,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPN,SAAS,WACTC,QAAQ,OACRM,WAAW,SACXC,eAAe,SARnB,SAUI,cAACC,EAAA,EAAD,CAAYzD,QAAQ,UAAU0D,UAAU,MAAMlD,MAAM,gBAApD,mBAAwEpD,KAAKuG,MACzEb,EAAMpD,OADV,YAST,SAASkE,EAAwBd,GACpC,OACI,cAACC,EAAA,EAAD,CAAKE,QAAQ,OAAOM,WAAW,SAA/B,SACI,cAACR,EAAA,EAAD,CAAKc,MAAM,OAAOC,GAAI,EAAtB,SACI,cAACC,EAAA,EAAD,aAAgB/D,QAAQ,eAAkB8C,QChB1D,IAyEerC,eAzEF,WACT,MAA4C9B,IAApCjB,EAAR,EAAQA,UAAwBC,EAAhC,EAAmBD,UAAaC,MAG1BqG,EAAkBrG,GAASA,EAAMsG,OAAS,EAAKtG,EAAMQ,QAAO,SAACuD,GAAD,OAA6B,IAAnBA,EAAK3E,aAAsB,GAEjGE,EAAWH,EAAYkH,EAAeC,OAAQtG,EAAMsG,QAO1D,OACI,0BAAS5I,UAAU,yBAAnB,UACI,qBAAKA,UAAU,qBAAf,SACI,cAACuI,EAAD,CAAyBlE,MAAOzC,EAAUuD,MAAM,gBAGpD,cAAC,EAAD,CACI1B,YAZQ,SAACoF,GACjBxG,EAAUyG,QAAQ,CAAE3F,MAAO0F,EAAWnH,WAAW,OAe7C,sBAAK1B,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAGQsC,GAASA,EAAMsG,OAAS,EACpB,cAAC,EAAD,IACE,qBAAK5I,UAAU,mBAAf,wEAMVsC,GAASA,EAAMsG,OAAS,GACxB,qBAAK5I,UAAU,WAAf,SACI,0BAASA,UAAU,aAAnB,UACI,qBAAIA,UAAU,SAAd,2BAA2B,qBAAKiH,MAAO,CAAE8B,YAAa,OAA3B,wBAA3B,KAAiF,cAACvB,EAAD,CAA2BrC,MAAM,YAAYd,MAAOzC,OAErI,uBACA,uCACM,wCADN,IACwB,qCAAQ+G,EAAeC,OAAvB,MAAkCtG,EAAMsG,UADhE,QAGA,uBAEA,sBAAK5I,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,4CADJ,IAC4B,cAACgJ,EAAA,EAAD,CAAM7D,MAAM,UAAU3D,MAAOc,EAAMsG,YAG/D,sBAAK5I,UAAU,QAAf,UACI,6CADJ,IAC6B,cAACgJ,EAAA,EAAD,CAAM7D,MAAM,YAAY3D,MAAOmH,EAAeC,eAI/E,uBAEA,8BACI,4F,YCxDjBK,MAZf,WACE,OACE,sBAAKjJ,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,QCDSkJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpJ,SAASqJ,eAAe,SAM1BZ,K","file":"static/js/main.b0a43cac.chunk.js","sourcesContent":["const Footer = () => {\n    return (\n        <footer className=\"main-footer\">\n            <div className=\"container text-center\">\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst Header = () => {\n    const [darkMode, setDarkMode] = useState(false);\n\n\n    useEffect(() => {\n        const currentTheme = localStorage.getItem(\"theme\");\n\n        if (currentTheme === \"dark\") {\n            document.body.classList.add(\"dark-theme\");\n            setDarkMode(true);\n        } else {\n            setDarkMode(false);\n            document.body.classList.remove(\"dark-theme\");\n        }\n    }, [darkMode]);\n\n\n\n    const toggleChecked = () => {\n        setDarkMode(!darkMode);\n        document.body.classList.toggle(\"dark-theme\");\n        const theme = document.body.classList.contains(\"dark-theme\")\n            ? \"dark\"\n            : \"light\";\n        localStorage.setItem(\"theme\", theme);\n    }\n\n\n    return (\n        <header className=\"main-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-10\">\n                        <h1>üñäÔ∏èLess - To Do </h1>\n                        <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <FormGroup className=\"d-flex align-items-end\">\n                            <FormControlLabel\n                                control={<Switch checked={darkMode}\n                                    onChange={toggleChecked}\n                                />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n                    </div>\n                </div>\n\n\n\n            </div>\n\n        </header>\n    )\n}\n\nexport default Header;","import { useEffect, useState } from \"react\";\n\nconst useProgress = (completed, target) => {\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const c = Math.ceil(completed / target * 100);\n        setProgress(c)\n        // console.log(progress);\n    }, [completed, target]);\n\n    return progress;\n}\n\nexport default useProgress;","import { makeAutoObservable } from \"mobx\";\n\nclass noteStore {\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        makeAutoObservable(this)\n    }\n    \n\n}\n\nexport default noteStore;","import { makeAutoObservable } from \"mobx\";\n\nclass todoStore {\n    todos = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        makeAutoObservable(this, {}, { autoBind: true })\n    }\n\n    addTodo(todoData) {\n        this.todos.push(todoData)\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    deleteTodo(index) {\n        this.todos = this.todos.filter((item, i) => i !== index);\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    editTodo(index, newvalue) {\n        this.todos.splice(index, 1, newvalue);\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    markCompleted(index) {\n        this.todos.splice(index, 1, {\n            completed: true,\n            title: this.todos[index].title\n        });\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n}\n\nexport default todoStore;","import { createContext, useContext } from \"react\";\nimport noteStore from \"./noteStore\";\nimport todoStore from \"./todoStore\";\n\nclass RootStore {\n    constructor() {\n        this.noteStore = new noteStore(this);\n        this.todoStore = new todoStore(this);\n    }\n}\n\nconst StoresContext = createContext(new RootStore());\n\nexport const useStores = () => useContext(StoresContext);","import { Button, TextField } from \"@material-ui/core\";\nimport { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst AddTodo = ({ addTodoItem }) => {\n  const refTodo = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    addTodoItem(data.todoTitle);\n    refTodo.current.value = \"\";\n    refTodo.current.focus();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"row\">\n        <div className=\"col-sm-8 mb-2\">\n          <TextField\n            error={\n              errors.todoTitle?.type === \"required\" ||\n              errors.todoTitle?.type === \"maxLength\"\n            }\n            label=\"Whats needs to be done? ü§î\"\n            helperText={\n              (errors.todoTitle?.type === \"required\" && \"Its required üòü\") ||\n              (errors.todoTitle?.type === \"maxLength\" &&\n                \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\")\n            }\n            variant=\"filled\"\n            fullWidth\n            inputRef={refTodo}\n            data-testid=\"todo-text\"\n            {...register(\"todoTitle\", {\n              required: {\n                value: true,\n                message: \"Please write what is in your mind? ü§î\",\n              },\n              maxLength: 50,\n            })}\n          />\n        </div>\n\n        <div className=\"col-sm-4 mb-2\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            data-testid=\"todo-addBtn\"\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Radio,\n} from \"@material-ui/core\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport { useRef, useState } from \"react\";\nimport { useStores } from \"store\";\nimport { observer } from \"mobx-react-lite\";\n\nconst TodoList = () => {\n  // get from store\n  const { todoStore } = useStores();\n  const { todos, editTodo, markCompleted, deleteTodo } = todoStore;\n\n  const [editFormStatus, setEditFormStatus] = useState(false);\n  const [selectedListIndex, setSelectedListIndex] = useState(0);\n  const editTodoInput = useRef(null);\n\n  const handlerEditFormSubmit = (e) => {\n    e.preventDefault();\n    editTodo(selectedListIndex, {\n      title: editTodoInput.current.value,\n      completed: false,\n    });\n    setSelectedListIndex(0);\n    setEditFormStatus(false);\n  };\n\n  // create dynamic form for edit todo item\n  const createEditFrom = () => {\n    return (\n      <div className=\"editFormWrapper\">\n        <form onSubmit={(e) => handlerEditFormSubmit(e)}>\n          <input\n            type=\"text\"\n            defaultValue={todos[selectedListIndex].title}\n            className=\"custom-input\"\n            ref={editTodoInput}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Update\n          </Button>\n        </form>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <List className=\"todo-list-wrapper\">\n        {todos &&\n          todos.map((todo, index) => {\n            return (\n              <ListItem\n                role=\"listitem\"\n                dense\n                button\n                key={index}\n                onDoubleClick={() => {\n                  setEditFormStatus(true);\n                  setSelectedListIndex(index);\n                }}\n                className={todo.completed && \"todo-completed\"}\n                data-testid=\"todo-listItem\"\n              >\n                {editFormStatus &&\n                  index === selectedListIndex &&\n                  createEditFrom()}\n\n                <ListItemIcon>\n                  <Radio\n                    color=\"primary\"\n                    checked={todo.completed}\n                    disabled={todo.completed}\n                    onChange={() => markCompleted(index)}\n                    value={true}\n                    variant=\"secondary\"\n                    name=\"radio-button-demo\"\n                    inputProps={{ \"aria-label\": \"A\" }}\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  style={{ textDecoration: todo.completed && \"line-through\" }}\n                >\n                  {todo.title}\n                </ListItemText>\n                <ListItemSecondaryAction data-testid=\"todo-deleteBtn\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"comments\"\n                    onClick={() => deleteTodo(index)}\n                  >\n                    <DeleteSharpIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n      </List>\n\n      <small>Double click to edit</small>\n    </div>\n  );\n};\n\nexport default observer(TodoList);\n","import { Box, CircularProgress, LinearProgress, Typography } from \"@material-ui/core\";\n\nexport function CircularProgressWithLabel(props) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\n\nexport function LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n        </Box>\n    );\n}","import { Chip } from '@material-ui/core';\nimport { observer } from 'mobx-react-lite';\n\nimport useProgress from 'hooks/useProgress';\nimport { useStores } from 'store';\n\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport \"./Todo.css\";\nimport \"../../theme.css\";\n\nimport { CircularProgressWithLabel, LinearProgressWithLabel } from 'components/shared/material';\n\nconst Todo = () => {\n    const { todoStore, todoStore: { todos } } = useStores();\n\n    // get completed todos\n    const todosCompleted = (todos && todos.length > 0) ? todos.filter((todo) => todo.completed === true) : []\n\n    const progress = useProgress(todosCompleted.length, todos.length)\n\n    const addTodoItem = (todoValue) => {\n        todoStore.addTodo({ title: todoValue, completed: false });\n    }\n\n\n    return (\n        <section className=\"container todo-wrapper\">\n            <div className=\"custom-progressbar\">\n                <LinearProgressWithLabel value={progress} color=\"secondary\" />\n            </div>\n\n            <AddTodo\n                addTodoItem={addTodoItem}\n\n            />\n\n            <div className=\"row\">\n                <div className=\"col-lg-8\">\n\n                    {\n                        todos && todos.length > 0 ?\n                            <TodoList />\n                            : <div className=\"alert alert-info\">What are you thinking, Add your first todo? üòâ</div>\n                    }\n\n                </div>\n\n                {\n                    todos && todos.length > 0 &&\n                    <div className=\"col-lg-4\">\n                        <section className=\"todo-board\">\n                            <h3 className=\"d-flex\"> üìù <div style={{ marginRight: \"5px\" }}>Todo Board</div>  <CircularProgressWithLabel color=\"secondary\" value={progress} /></h3>\n\n                            <hr />\n                            <small>\n                                ( <span>List</span> <span> {todosCompleted.length} / {todos.length}</span> )\n                            </small>\n                            <hr />\n\n                            <div className=\"row\">\n\n                                <div className=\"col-6\">\n                                    <strong>All : </strong> <Chip color=\"primary\" label={todos.length} />\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <strong>Done : </strong> <Chip color=\"secondary\" label={todosCompleted.length} />\n                                </div>\n                            </div>\n\n                            <hr />\n\n                            <div>\n                                <p>We don't store data on server. üôÇ</p>\n                            </div>\n                        </section>\n                    </div>\n                }\n\n            </div>\n\n        </section>\n    )\n}\n\nexport default observer(Todo);","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Todo from 'components/todo/Todo';\nimport './App.css';\nimport './reset.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Todo></Todo>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}