{"version":3,"sources":["components/shared/Footer.tsx","components/shared/Header.tsx","hooks/useProgress.tsx","store/noteStore.js","store/todoStore.js","store/index.js","components/todo/todoAdd/TodoAdd.tsx","components/todo/todoList/TodoList.tsx","components/shared/material.js","components/todo/Todo.tsx","App.tsx","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","useProgress","completed","target","progress","setProgress","c","Math","ceil","noteStore","rootStore","this","makeAutoObservable","todoStore","todos","JSON","parse","autoBind","todoData","push","stringify","index","filter","item","i","newvalue","splice","title","StoresContext","createContext","useStores","useContext","TodoAdd","addTodoItem","useForm","register","handleSubmit","errors","formState","reset","onSubmit","data","todoTitle","TextField","error","type","helperText","variant","fullWidth","data-testid","required","value","message","maxLength","Button","color","observer","editTodo","markCompleted","deleteTodo","editFormStatus","setEditFormStatus","selectedListIndex","setSelectedListIndex","editTodoInput","useRef","createEditFrom","e","preventDefault","current","handlerEditFormSubmit","defaultValue","ref","List","map","todo","ListItem","role","dense","button","onDoubleClick","ListItemIcon","Radio","disabled","name","inputProps","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","CircularProgressWithLabel","props","Box","position","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Typography","component","round","LinearProgressWithLabel","width","mr","LinearProgress","todosCompleted","length","todoValue","addTodo","marginRight","Chip","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+KAUeA,EAVA,WACb,OACE,wBAAQC,UAAU,cAAlB,SACE,sBAAKA,UAAU,wBAAf,wBACa,mBAAGC,KAAK,kCAAR,iC,mCC6CJC,EA9CA,WACb,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAGa,SAFAC,aAAaC,QAAQ,UAGxCC,SAASC,KAAKC,UAAUC,IAAI,cAC5BP,GAAY,KAEZA,GAAY,GACZI,SAASC,KAAKC,UAAUE,OAAO,iBAEhC,CAACT,IAWJ,OACE,wBAAQJ,UAAU,cAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,iEACA,mGAEF,qBAAKA,UAAU,WAAf,SACE,cAACc,EAAA,EAAD,CAAWd,UAAU,yBAArB,SACE,cAACe,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASd,EAAUe,SApB5B,WACpBd,GAAaD,GACbK,SAASC,KAAKC,UAAUS,OAAO,cAC/B,IAAMC,EAAQZ,SAASC,KAAKC,UAAUW,SAAS,cAC3C,OACA,QACJf,aAAagB,QAAQ,QAASF,MAelBG,MAAM,0B,iBC1BPC,EAXK,SAACC,EAAmBC,GACtC,MAAgCxB,mBAAS,GAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KAOA,OALAvB,qBAAU,WACR,IAAMwB,EAAIC,KAAKC,KAAMN,EAAYC,EAAU,KAC3CE,EAAYC,KACX,CAACJ,EAAWC,IAERC,G,gBCGMK,EATX,WAAYC,GAAY,oBACpBC,KAAKD,UAAYA,EAEjBE,YAAmBD,O,QC2BZE,E,WA7BX,WAAYH,GAAY,yBAFxBI,MAAQ/B,aAAaC,QAAQ,SAAW+B,KAAKC,MAAMjC,aAAaC,QAAQ,UAAY,GAGhF2B,KAAKD,UAAYA,EACjBE,YAAmBD,KAAM,GAAI,CAAEM,UAAU,I,2CAG7C,SAAQC,GACJP,KAAKG,MAAMK,KAAKD,GAChBnC,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,wBAGtD,SAAWO,GACPV,KAAKG,MAAQH,KAAKG,MAAMQ,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMH,KAClDtC,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,sBAGtD,SAASO,EAAOI,GACZd,KAAKG,MAAMY,OAAOL,EAAO,EAAGI,GAC5B1C,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,U,2BAGtD,SAAcO,GACVV,KAAKG,MAAMY,OAAOL,EAAO,EAAG,CACxBnB,WAAW,EACXyB,MAAOhB,KAAKG,MAAMO,GAAOM,QAE7B5C,aAAagB,QAAQ,QAASgB,KAAKK,UAAUT,KAAKG,Y,KCnBpDc,EAAgBC,wBAAc,IANhC,aAAe,oBACXlB,KAAKF,UAAY,IAAIA,EAAUE,MAC/BA,KAAKE,UAAY,IAAIA,EAAUF,QAM1BmB,EAAY,kBAAMC,qBAAWH,I,kCCmD3BI,EAzDC,SAAC,GAA+D,IAAD,QAA5DC,EAA4D,EAA5DA,YACjB,EAKIC,cAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAQF,OACE,sBAAMC,SAAUJ,GAND,SAACK,GAChBR,EAAYQ,EAAKC,WACjBH,OAIA,SACE,sBAAK/D,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACmE,EAAA,EAAD,aACEC,MAC6B,cAA3B,UAAAP,EAAOK,iBAAP,eAAkBG,OACS,eAA3B,UAAAR,EAAOK,iBAAP,eAAkBG,MAEpB7C,MAAM,uCACN8C,WAC8B,cAA3B,UAAAT,EAAOK,iBAAP,eAAkBG,MAAuB,4BACd,eAA3B,UAAAR,EAAOK,iBAAP,eAAkBG,OACjB,gFAEJE,QAAQ,SACRC,WAAS,EACTC,cAAY,aACRd,EAAS,YAAa,CACxBe,SAAU,CACRC,OAAO,EACPC,QAAS,mDAEXC,UAAW,SAKjB,qBAAK7E,UAAU,gBAAf,SACE,cAAC8E,EAAA,EAAD,CACET,KAAK,SACLE,QAAQ,YACRQ,MAAM,UACNP,WAAS,EACTC,cAAY,cALd,yB,gFCkEKO,eAnGE,WAEf,IAAQ3C,EAAciB,IAAdjB,UACAC,EAA+CD,EAA/CC,MAAO2C,EAAwC5C,EAAxC4C,SAAUC,EAA8B7C,EAA9B6C,cAAeC,EAAe9C,EAAf8C,WAExC,EAA4ChF,oBAAS,GAArD,mBAAOiF,EAAP,KAAuBC,EAAvB,KACA,EAAkDlF,mBAAS,GAA3D,mBAAOmF,EAAP,KAA0BC,EAA1B,KACMC,EAAgBC,iBAAY,MAa5BC,EAAiB,WACrB,OACE,qBAAK1F,UAAU,kBAAf,SACE,uBAAMgE,SAAU,SAAC2B,GAAD,OAdQ,SAACA,GAAkB,IAAD,EAC9CA,EAAEC,iBACFX,EAASK,EAAmB,CAC1BnC,MAAK,UAAEqC,EAAcK,eAAhB,aAAE,EAAuBlB,MAC9BjD,WAAW,IAEb6D,EAAqB,GACrBF,GAAkB,GAOSS,CAAsBH,IAA7C,UACE,uBACEtB,KAAK,OACL0B,aAAczD,EAAMgD,GAAmBnC,MACvCnD,UAAU,eACVgG,IAAKR,IAEP,cAACV,EAAA,EAAD,CAAQT,KAAK,SAASE,QAAQ,YAAYQ,MAAM,UAAhD,0BAQR,OACE,gCACE,cAACkB,EAAA,EAAD,CAAMjG,UAAU,oBAAhB,SACGsC,GACCA,EAAM4D,KAAI,SAACC,EAAgBtD,GACzB,OACE,eAACuD,EAAA,EAAD,CACEC,KAAK,WACLC,OAAK,EACLC,QAAM,EAENC,cAAe,WACbnB,GAAkB,GAClBE,EAAqB1C,IAGvB7C,UAAWmG,EAAKzE,WAAa,iBAC7B+C,cAAY,gBAXd,UAaGW,GACCvC,IAAUyC,GACVI,IAEF,cAACe,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE3B,MAAM,UACN7D,QAASiF,EAAKzE,UACdiF,SAAUR,EAAKzE,UACfP,SAAU,kBAAM+D,EAAcrC,IAC9B8B,OAAO,EAEPJ,QAAQ,YACRqC,KAAK,oBACLC,WAAY,CAAE,aAAc,SAGhC,cAACC,EAAA,EAAD,CAEEC,MAAO,CAAEC,eAAgBb,EAAKzE,WAAa,gBAF7C,SAIGyE,EAAKhD,QAER,cAAC8D,EAAA,EAAD,CAAyBxC,cAAY,iBAArC,SACE,cAACyC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,WACXC,QAAS,kBAAMlC,EAAWtC,IAH5B,SAKE,cAAC,IAAD,UAtCCA,QA8Cf,+D,iDCvGC,SAASyE,EAA0BC,GACxC,OACE,eAACC,EAAA,EAAD,CAAKC,SAAS,WAAWC,QAAQ,cAAjC,UACE,cAACC,EAAA,EAAD,aAAkBpD,QAAQ,eAAkBgD,IAC5C,cAACC,EAAA,EAAD,CACEI,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPN,SAAS,WACTC,QAAQ,OACRM,WAAW,SACXC,eAAe,SARjB,SAUE,cAACC,EAAA,EAAD,CACE3D,QAAQ,UACR4D,UAAU,MACVpD,MAAM,gBAHR,mBAIKhD,KAAKqG,MAAMb,EAAM5C,OAJtB,YAUD,SAAS0D,EAAwBd,GACtC,OACE,cAACC,EAAA,EAAD,CAAKE,QAAQ,OAAOM,WAAW,SAA/B,SACE,cAACR,EAAA,EAAD,CAAKc,MAAM,OAAOC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,aAAgBjE,QAAQ,eAAkBgD,QClBlD,IAkFevC,eAlFF,WACX,MAGI1B,IAFFjB,EADF,EACEA,UACaC,EAFf,EAEED,UAAaC,MAITmG,EACJnG,GAASA,EAAMoG,OAAS,EACpBpG,EAAMQ,QAAO,SAACqD,GAAD,OAAuC,IAAnBA,EAAKzE,aACtC,GAEAE,EAAWH,EAAYgH,EAAeC,OAAQpG,EAAMoG,QAM1D,OACE,0BAAS1I,UAAU,yBAAnB,UACE,qBAAKA,UAAU,qBAAf,SACE,cAACqI,EAAD,CAAyB1D,MAAO/C,EAAUmD,MAAM,gBAGlD,cAAC,EAAD,CAAStB,YAVO,SAACkF,GACnBtG,EAAUuG,QAAQ,CAAEzF,MAAOwF,EAAWjH,WAAW,OAW/C,sBAAK1B,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACGsC,GAASA,EAAMoG,OAAS,EACvB,cAAC,EAAD,IAEA,qBAAK1I,UAAU,mBAAf,wEAMHsC,GAASA,EAAMoG,OAAS,GACvB,qBAAK1I,UAAU,WAAf,SACE,0BAASA,UAAU,aAAnB,UACE,qBAAIA,UAAU,SAAd,UACG,IADH,gBAEK,qBAAK+G,MAAO,CAAE8B,YAAa,OAA3B,wBAAqD,IACxD,cAACvB,EAAD,CAA2BvC,MAAM,YAAYJ,MAAO/C,OAGtD,uBACA,uCACI,wCAAkB,IACpB,iCACG,IACA6G,EAAeC,OAFlB,MAE6BpG,EAAMoG,UAC3B,IALV,OAQA,uBAEA,sBAAK1I,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,4CAAwB,IACxB,cAAC8I,EAAA,EAAD,CAAM/D,MAAM,UAAUvD,MAAOc,EAAMoG,YAGrC,sBAAK1I,UAAU,QAAf,UACE,6CAAyB,IACzB,cAAC8I,EAAA,EAAD,CAAM/D,MAAM,YAAYvD,MAAOiH,EAAeC,eAIlD,uBAEA,8BACE,4F,YCzEDK,MAVf,WACE,OACE,sBAAK/I,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCNNgJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzI,SAAS0I,eAAe,U","file":"static/js/main.0296f88c.chunk.js","sourcesContent":["const Footer = () => {\n  return (\n    <footer className=\"main-footer\">\n      <div className=\"container text-center\">\n        Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst Header = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const currentTheme = localStorage.getItem(\"theme\");\n\n    if (currentTheme === \"dark\") {\n      document.body.classList.add(\"dark-theme\");\n      setDarkMode(true);\n    } else {\n      setDarkMode(false);\n      document.body.classList.remove(\"dark-theme\");\n    }\n  }, [darkMode]);\n\n  const toggleChecked = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle(\"dark-theme\");\n    const theme = document.body.classList.contains(\"dark-theme\")\n      ? \"dark\"\n      : \"light\";\n    localStorage.setItem(\"theme\", theme);\n  };\n\n  return (\n    <header className=\"main-header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-10\">\n            <h1>üñäÔ∏èLess - To Do </h1>\n            <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\n          </div>\n          <div className=\"col-sm-2\">\n            <FormGroup className=\"d-flex align-items-end\">\n              <FormControlLabel\n                control={<Switch checked={darkMode} onChange={toggleChecked} />}\n                label=\"Dark Mode\"\n              />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nconst useProgress = (completed: number, target: number) => {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const c = Math.ceil((completed / target) * 100);\n    setProgress(c);\n  }, [completed, target]);\n\n  return progress;\n};\n\nexport default useProgress;\n","import { makeAutoObservable } from \"mobx\";\n\nclass noteStore {\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        makeAutoObservable(this)\n    }\n    \n\n}\n\nexport default noteStore;","import { makeAutoObservable } from \"mobx\";\n\nclass todoStore {\n    todos = localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [];\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        makeAutoObservable(this, {}, { autoBind: true })\n    }\n\n    addTodo(todoData) {\n        this.todos.push(todoData)\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    deleteTodo(index) {\n        this.todos = this.todos.filter((item, i) => i !== index);\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    editTodo(index, newvalue) {\n        this.todos.splice(index, 1, newvalue);\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n\n    markCompleted(index) {\n        this.todos.splice(index, 1, {\n            completed: true,\n            title: this.todos[index].title\n        });\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos))\n    }\n}\n\nexport default todoStore;","import { createContext, useContext } from \"react\";\nimport noteStore from \"./noteStore\";\nimport todoStore from \"./todoStore\";\n\nclass RootStore {\n    constructor() {\n        this.noteStore = new noteStore(this);\n        this.todoStore = new todoStore(this);\n    }\n}\n\nconst StoresContext = createContext(new RootStore());\n\nexport const useStores = () => useContext(StoresContext);","import { Button, TextField } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\n\ntype TodoType = {\n  todoTitle: string;\n};\n\nconst TodoAdd = ({ addTodoItem }: { addTodoItem: (title: string) => void }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<TodoType>();\n\n  const onSubmit = (data: TodoType) => {\n    addTodoItem(data.todoTitle);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"row\">\n        <div className=\"col-sm-8 mb-2\">\n          <TextField\n            error={\n              errors.todoTitle?.type === \"required\" ||\n              errors.todoTitle?.type === \"maxLength\"\n            }\n            label=\"Whats needs to be done? ü§î\"\n            helperText={\n              (errors.todoTitle?.type === \"required\" && \"Its required üòü\") ||\n              (errors.todoTitle?.type === \"maxLength\" &&\n                \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\")\n            }\n            variant=\"filled\"\n            fullWidth\n            data-testid=\"todo-text\"\n            {...register(\"todoTitle\", {\n              required: {\n                value: true,\n                message: \"Please write what is in your mind? ü§î\",\n              },\n              maxLength: 50,\n            })}\n          />\n        </div>\n\n        <div className=\"col-sm-4 mb-2\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            data-testid=\"todo-addBtn\"\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoAdd;\n","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Radio,\n} from \"@material-ui/core\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport { FormEvent, useRef, useState } from \"react\";\nimport { useStores } from \"store\";\nimport { observer } from \"mobx-react-lite\";\nimport { TodoType } from \"../todo.types\";\n\nconst TodoList = () => {\n  // get from store\n  const { todoStore } = useStores();\n  const { todos, editTodo, markCompleted, deleteTodo } = todoStore;\n\n  const [editFormStatus, setEditFormStatus] = useState(false);\n  const [selectedListIndex, setSelectedListIndex] = useState(0);\n  const editTodoInput = useRef<any>(null);\n\n  const handlerEditFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    editTodo(selectedListIndex, {\n      title: editTodoInput.current?.value,\n      completed: false,\n    });\n    setSelectedListIndex(0);\n    setEditFormStatus(false);\n  };\n\n  // create dynamic form for edit todo item\n  const createEditFrom = () => {\n    return (\n      <div className=\"editFormWrapper\">\n        <form onSubmit={(e) => handlerEditFormSubmit(e)}>\n          <input\n            type=\"text\"\n            defaultValue={todos[selectedListIndex].title}\n            className=\"custom-input\"\n            ref={editTodoInput}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Update\n          </Button>\n        </form>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <List className=\"todo-list-wrapper\">\n        {todos &&\n          todos.map((todo: TodoType, index: number) => {\n            return (\n              <ListItem\n                role=\"listitem\"\n                dense\n                button\n                key={index}\n                onDoubleClick={() => {\n                  setEditFormStatus(true);\n                  setSelectedListIndex(index);\n                }}\n                // @ts-ignore\n                className={todo.completed && \"todo-completed\"}\n                data-testid=\"todo-listItem\"\n              >\n                {editFormStatus &&\n                  index === selectedListIndex &&\n                  createEditFrom()}\n\n                <ListItemIcon>\n                  <Radio\n                    color=\"primary\"\n                    checked={todo.completed}\n                    disabled={todo.completed}\n                    onChange={() => markCompleted(index)}\n                    value={true}\n                    // @ts-ignore\n                    variant=\"secondary\"\n                    name=\"radio-button-demo\"\n                    inputProps={{ \"aria-label\": \"A\" }}\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // @ts-ignore\n                  style={{ textDecoration: todo.completed && \"line-through\" }}\n                >\n                  {todo.title}\n                </ListItemText>\n                <ListItemSecondaryAction data-testid=\"todo-deleteBtn\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"comments\"\n                    onClick={() => deleteTodo(index)}\n                  >\n                    <DeleteSharpIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n      </List>\n\n      <small>Double click to edit</small>\n    </div>\n  );\n};\n\nexport default observer(TodoList);\n","import {\n  Box,\n  CircularProgress,\n  LinearProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nexport function CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport function LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n    </Box>\n  );\n}\n","import { Chip } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\n\nimport useProgress from \"hooks/useProgress\";\nimport { useStores } from \"store\";\n\nimport AddTodo from \"./todoAdd/TodoAdd\";\nimport TodoList from \"./todoList/TodoList\";\nimport \"./Todo.css\";\nimport \"../../theme.css\";\n\nimport {\n  CircularProgressWithLabel,\n  LinearProgressWithLabel,\n} from \"components/shared/material\";\nimport { TodoType } from \"./todo.types\";\n\nconst Todo = () => {\n  const {\n    todoStore,\n    todoStore: { todos },\n  } = useStores();\n\n  // get completed todos\n  const todosCompleted =\n    todos && todos.length > 0\n      ? todos.filter((todo: TodoType) => todo.completed === true)\n      : [];\n\n  const progress = useProgress(todosCompleted.length, todos.length);\n\n  const addTodoItem = (todoValue: string) => {\n    todoStore.addTodo({ title: todoValue, completed: false });\n  };\n\n  return (\n    <section className=\"container todo-wrapper\">\n      <div className=\"custom-progressbar\">\n        <LinearProgressWithLabel value={progress} color=\"secondary\" />\n      </div>\n\n      <AddTodo addTodoItem={addTodoItem} />\n\n      <div className=\"row\">\n        <div className=\"col-lg-8\">\n          {todos && todos.length > 0 ? (\n            <TodoList />\n          ) : (\n            <div className=\"alert alert-info\">\n              What are you thinking, Add your first todo? üòâ\n            </div>\n          )}\n        </div>\n\n        {todos && todos.length > 0 && (\n          <div className=\"col-lg-4\">\n            <section className=\"todo-board\">\n              <h3 className=\"d-flex\">\n                {\" \"}\n                üìù <div style={{ marginRight: \"5px\" }}>Todo Board</div>{\" \"}\n                <CircularProgressWithLabel color=\"secondary\" value={progress} />\n              </h3>\n\n              <hr />\n              <small>\n                ( <span>List</span>{\" \"}\n                <span>\n                  {\" \"}\n                  {todosCompleted.length} / {todos.length}\n                </span>{\" \"}\n                )\n              </small>\n              <hr />\n\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <strong>All : </strong>{\" \"}\n                  <Chip color=\"primary\" label={todos.length} />\n                </div>\n\n                <div className=\"col-6\">\n                  <strong>Done : </strong>{\" \"}\n                  <Chip color=\"secondary\" label={todosCompleted.length} />\n                </div>\n              </div>\n\n              <hr />\n\n              <div>\n                <p>We don't store data on server. üôÇ</p>\n              </div>\n            </section>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default observer(Todo);\n","import Footer from \"components/shared/Footer\";\nimport Header from \"components/shared/Header\";\nimport Todo from \"components/todo/Todo\";\nimport \"./App.css\";\nimport \"./reset.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Todo />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}