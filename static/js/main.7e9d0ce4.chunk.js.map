{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","components/todo/AddTodo.js","components/todo/TodoList.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","AddTodo","props","refTodo","useRef","useForm","register","handleSubmit","errors","formState","onSubmit","data","addTodoItem","todoTitle","current","value","focus","TextField","error","type","label","helperText","variant","fullWidth","inputRef","required","message","maxLength","Button","color","TodoList","todos","deleteTodoItem","markTodoAsCompleted","List","map","todo","index","ListItem","role","undefined","dense","button","style","background","completed","ListItemIcon","Radio","checked","disabled","onChange","title","name","inputProps","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Todo","useState","setTodos","todosCompleted","filter","todoValue","splice","length","Chip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e9d0ce4.chunk.js","sourcesContent":["const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","const Header = () => {\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"container\">\r\n                <h1>üñäÔ∏èLess - To Do </h1>\r\n                <h3>PenLess To Do gives you focus, from work to play. üòé</h3>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddTodo = (props) => {\r\n    const refTodo = useRef(null);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        props.addTodoItem(data.todoTitle);\r\n        refTodo.current.value = \"\";\r\n        refTodo.current.focus();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <TextField\r\n                        error={errors.todoTitle?.type === 'required' || errors.todoTitle?.type === 'maxLength'}\r\n                        label=\"Whats needs to be done? ü§î\"\r\n                        helperText={\r\n                            errors.todoTitle?.type === 'required' && \"Its required üòü\" ||\r\n                            errors.todoTitle?.type === 'maxLength' && \"You've exceeds the max limits. Should not be more then 50 letter üôÑ\"\r\n                        }\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        inputRef={refTodo}\r\n                        {...register(\"todoTitle\", {\r\n                            required: {\r\n                                value: true,\r\n                                message: \"Please write what is in your mind? ü§î\"\r\n                            }, maxLength: 50\r\n                        })}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <Button type=\"submit\" variant=\"contained\" fullWidth color=\"primary\"\r\n                    >Add</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import { IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Radio } from \"@material-ui/core\";\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nconst TodoList = (props) => {\r\n    const { todos, deleteTodoItem, markTodoAsCompleted } = props;\r\n\r\n    return (\r\n        <List className=\"todo-list-wrapper\">\r\n\r\n            {\r\n                todos.map((todo, index) => {\r\n                    return (\r\n                        <ListItem role={undefined} dense button key={index}\r\n                            style={{ background: todo.completed && \"#c9eecb\" }}>\r\n                            <ListItemIcon>\r\n                                <Radio\r\n                                    color=\"primary\"\r\n                                    checked={todo.completed}\r\n                                    disabled={todo.completed}\r\n                                    onChange={() => markTodoAsCompleted(index, todo.title)}\r\n                                    value={true}\r\n                                    variant=\"secondary\"\r\n                                    name=\"radio-button-demo\"\r\n                                    inputProps={{ 'aria-label': 'A' }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText style={{ textDecoration: todo.completed && \"line-through\" }}>{todo.title}</ListItemText>\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={() => deleteTodoItem(index)}>\r\n                                    <DeleteSharpIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { Chip } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport AddTodo from './AddTodo';\r\nimport TodoList from './TodoList';\r\n\r\n\r\nconst Todo = () => {\r\n\r\n    const [todos, setTodos] = useState([{\r\n        title: \"I will create todo on painless todo app\",\r\n        completed: true\r\n    }]);\r\n\r\n    const addTodoItem = (todoValue) => {\r\n        setTodos([...todos, { title: todoValue, completed: false }])\r\n    }\r\n\r\n    const deleteTodoItem = (index) => {\r\n        todos.splice(index, 1);\r\n        setTodos([...todos]);\r\n    }\r\n\r\n    const markTodoAsCompleted = (index, title) => {\r\n        // basic modification\r\n        todos.splice(index, 1, {\r\n            completed: true,\r\n            title\r\n        });\r\n\r\n        // and setting to the main states with spread\r\n        setTodos([...todos]);\r\n    }\r\n\r\n    const todosCompleted = todos.filter((todo) => todo.completed === true)\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <AddTodo\r\n                addTodoItem={addTodoItem}\r\n\r\n            />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <TodoList\r\n                        todos={todos}\r\n                        deleteTodoItem={deleteTodoItem}\r\n                        markTodoAsCompleted={markTodoAsCompleted}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <section className=\"todo-board\">\r\n                        <h3>Todo Board üìù</h3>\r\n                        <hr />\r\n                        <small>\r\n                            ( <span>List</span> <span> {todosCompleted.length} / {todos.length}</span> )\r\n                        </small>\r\n                        <hr />\r\n\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>All : </strong> <Chip color=\"primary\" label={todos.length} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <strong>Completed : </strong> <Chip color=\"secondary\" label={todosCompleted.length} />\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Todo;","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Todo from 'components/todo/Todo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n      <Todo></Todo>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}